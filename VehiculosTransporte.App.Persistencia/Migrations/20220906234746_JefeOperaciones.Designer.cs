// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehiculosTransporte.App.Persistencia;

namespace VehiculosTransporte.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220906234746_JefeOperaciones")]
    partial class JefeOperaciones
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero_Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Repuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<int>("VerificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VerificacionId");

                    b.ToTable("Repuestos");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Verificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MecanicoId")
                        .HasColumnType("int");

                    b.Property<string>("Nivel_Aceite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nivel_Liquido_direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nivel_Liquido_frenos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nivel_Refrigerante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vehiculo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MecanicoId");

                    b.ToTable("Verificaciones");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Auxiliar", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("Auxiliar");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.JefeOperaciones", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("JefeOperaciones");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Mecanico", b =>
                {
                    b.HasBaseType("VehiculosTransporte.App.Dominio.Persona");

                    b.HasDiscriminator().HasValue("Mecanico");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Repuesto", b =>
                {
                    b.HasOne("VehiculosTransporte.App.Dominio.Verificacion", "Verificacion")
                        .WithMany()
                        .HasForeignKey("VerificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Verificacion");
                });

            modelBuilder.Entity("VehiculosTransporte.App.Dominio.Verificacion", b =>
                {
                    b.HasOne("VehiculosTransporte.App.Dominio.Mecanico", "Mecanico")
                        .WithMany()
                        .HasForeignKey("MecanicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mecanico");
                });
#pragma warning restore 612, 618
        }
    }
}
